{"version":3,"sources":["audio/fx3.wav","Scoreboard.jsx","audio/fx1.wav","audio/fx2.mp3","Card.jsx","Modal.jsx","FailModal.jsx","WinModal.jsx","img/dogs/bordercollie.jpg","img/dogs/goldenretriever.jpg","img/dogs/englishmastiff.jpg","img/dogs/rottweiler.jpg","img/dogs/bassethound.jpg","img/dogs/afghanhound.jpg","img/dogs/saluki.jpg","img/dogs/borzoi.jpg","img/dogs/greyhound.jpg","img/dogs/alaskanmalamute.jpg","img/dogs/greatdane.jpg","img/dogs/labradorretriever.jpg","App.js","index.js"],"names":["Scoreboard","props","audio3","Audio","fx3","useEffect","currScore","highScore","updateHighScore","array","totalClicks","play","chooseModal","updateClicked","className","Card","sound1","fx1","sound2","fx2","datakey","dataKey","onClick","e","cardKey","currentTarget","getAttribute","clickedCards","includes","resetTotalClicks","resetScore","push","increment","shuffle","incrementClicks","src","img","alt","title","Modal","id","FailModal","WinModal","App","generateId","Math","random","toFixed","useState","BorderCollie","key","GoldenRetriever","EnglishMastiff","Rottweiler","BassetHound","AfghanHound","Saluki","Borzoi","Greyhound","AlaskanMalamute","GreatDane","LabradorRetriever","cardArray","setCardArray","modalSwitch","setModalSwitch","setCurrScore","setHighScore","setClickedCards","setTotalClicks","shuffleCards","shuffled","currentIndex","length","randomIndex","floor","incrementScore","param","value","renderSwitch","map","card","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31cd08ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fx3.4e3baf32.wav\";","import React, { useEffect } from 'react'\nimport fx3 from './audio/fx3.wav'\n\nfunction Scoreboard (props) {\n\n    const audio3 = new Audio(fx3)\n\n    useEffect(() => {\n        if (props.currScore > props.highScore) {\n            props.updateHighScore(props.currScore)\n        }\n      },[props, props.currScore, props.highScore])\n      \n      useEffect(() => {\n        const array = []\n        if (props.totalClicks !== 0 && props.totalClicks % 12 === 0) {\n            audio3.play()\n            if (props.totalClicks === 12) {\n                props.chooseModal('win')\n                props.updateClicked([...array])\n            } else {\n                props.updateClicked([...array])\n            }\n        }\n      },[props.totalClicks])\n    return(\n        <div className=\"scoreboard\">\n            <div className=\"scores\">\n                <div className=\"score-wrap\">\n                    <p>score</p>\n                    <div className=\"curr-score score\">\n                        <p>{props.currScore}</p>\n                    </div>\n                </div>\n                <div className=\"score-wrap\">\n                    <p>record</p>\n                    <div className=\"high-score score\">\n                        <p>{props.highScore}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Scoreboard;","export default __webpack_public_path__ + \"static/media/fx1.2cc16053.wav\";","export default __webpack_public_path__ + \"static/media/fx2.d7c2aecd.mp3\";","import React from 'react'\nimport fx1 from './audio/fx1.wav'\nimport fx2 from './audio/fx2.mp3'\nfunction Card (props) {\n\n    const sound1 = new Audio(fx1)\n    const sound2 = new Audio(fx2)\n\n    const handleClick = function (e) {\n        const cardKey = e.currentTarget.getAttribute('datakey')\n        if (!props.clickedCards.includes(cardKey)) {\n            sound1.play()\n            let array = props.clickedCards\n            array.push(cardKey)\n            props.updateClicked([...array])\n            props.increment()\n            props.shuffle()\n        } else {\n            sound2.play()\n            props.chooseModal('fail')\n            props.resetTotalClicks()\n            props.resetScore()\n            props.updateClicked([])\n        }\n    \n        props.incrementClicks()\n    }\n    return(\n        <div className=\"card\" datakey={props.dataKey} onClick={handleClick}>\n            <div className=\"content\">\n                <img src={props.img} alt=\"dog\"></img>\n                <p>{props.title}</p>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Card;\n\n","import React from 'react'\nfunction Modal (props) {\n    const handleClick = function () {\n        props.chooseModal(null)\n    }\n    return(\n        <div id=\"my-modal\" className=\"modal is-hidden is-visually-hidden\">\n            <div className=\"modal-content\">\n                <h2>TEST YOUR MEMORY!</h2>\n                <p> Don't click the same dog twice! Each time a dog is clicked, the order of the\n                    images is randomized. Try to beat your record score!\n                </p>\n                <button onClick={handleClick}>start</button>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Modal;\n","import React from 'react'\nfunction FailModal (props) {\n    const handleClick = function () {\n        props.chooseModal(null)\n        props.resetTotalClicks()\n    }\n    return(\n        <div id=\"my-modal\" className=\"modal is-hidden is-visually-hidden\">\n            <div className=\"modal-content\">\n                <p>Uh oh! You already clicked that dog!\n                </p>\n                <button onClick={handleClick}>try again</button>\n            </div>\n        </div>\n    )\n\n}\n\nexport default FailModal;\n","import React from 'react'\nfunction WinModal (props) {\n    const array = []\n    const handleClick = function () {\n        props.chooseModal(null)\n        props.updateClicked([...array])\n        props.resetTotalClicks()\n        props.resetScore()\n        props.updateHighScore(0)\n    }\n    const handleClick2 = function () {\n        props.chooseModal(null)\n        props.updateClicked([...array])\n    }\n    return(\n        <div id=\"my-modal\" className=\"modal is-hidden is-visually-hidden\">\n            <div className=\"modal-content\">\n                <p>You did it! Start over or keep going to beat your high score of {props.highScore} points!</p>\n                <div className=\"modal-buttons\">\n                    <button onClick={handleClick}>start over</button>\n                    <button onClick={handleClick2}>keep going</button>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default WinModal;\n","export default __webpack_public_path__ + \"static/media/bordercollie.761495cf.jpg\";","export default __webpack_public_path__ + \"static/media/goldenretriever.d3ca17ae.jpg\";","export default __webpack_public_path__ + \"static/media/englishmastiff.2bb48eff.jpg\";","export default __webpack_public_path__ + \"static/media/rottweiler.831c12e5.jpg\";","export default __webpack_public_path__ + \"static/media/bassethound.2c5d8c91.jpg\";","export default __webpack_public_path__ + \"static/media/afghanhound.e6919a4e.jpg\";","export default __webpack_public_path__ + \"static/media/saluki.4049d6e2.jpg\";","export default __webpack_public_path__ + \"static/media/borzoi.5a42eed0.jpg\";","export default __webpack_public_path__ + \"static/media/greyhound.6f49d964.jpg\";","export default __webpack_public_path__ + \"static/media/alaskanmalamute.da7fab06.jpg\";","export default __webpack_public_path__ + \"static/media/greatdane.6b4f3d84.jpg\";","export default __webpack_public_path__ + \"static/media/labradorretriever.290b83f4.jpg\";","import React, {useState} from 'react'\nimport './App.css';\nimport Scoreboard from './Scoreboard'\nimport Card from './Card'\nimport Modal from './Modal'\nimport FailModal from './FailModal'\nimport WinModal from './WinModal'\nimport { \n  BorderCollie,\n  GoldenRetriever,\n  EnglishMastiff,\n  Rottweiler,\n  BassetHound,\n  AfghanHound,\n  Saluki,\n  Borzoi,\n  Greyhound,\n  AlaskanMalamute,\n  GreatDane,\n  LabradorRetriever\n} from './img/index'\n\nfunction App() {\n\n  const generateId = function() {\n    const n = (Math.random() * 1000000).toFixed()\n    const id = 'cardId' + n\n    return id\n  }\n\n  const [cardArray, setCardArray] = useState([\n    {title: \"Border Collie\", img: BorderCollie, key: generateId()},\n    {title: \"Golden Retriever\", img: GoldenRetriever, key: generateId()},\n    {title: \"English Mastiff\", img: EnglishMastiff, key: generateId()},\n    {title: \"Rottweiler\", img: Rottweiler, key: generateId()},\n    {title: \"Basset Hound\", img: BassetHound, key: generateId()},\n    {title: \"Afghan Hound\", img: AfghanHound, key: generateId()},\n    {title: \"Saluki\", img: Saluki, key: generateId()},\n    {title: \"Borzoi\", img: Borzoi, key: generateId()},\n    {title: \"Greyhound\", img: Greyhound, key: generateId()},\n    {title: \"Alaskan Malamute\", img: AlaskanMalamute, key: generateId()},\n    {title: \"Great Dane\", img: GreatDane, key: generateId()},\n    {title: \"Labrador Retriever\", img: LabradorRetriever, key: generateId()}\n  ])\n  const [modalSwitch, setModalSwitch] = useState('default')\n  const [currScore, setCurrScore] = useState(0)\n  const [highScore, setHighScore] = useState(0)\n  const [clickedCards, setClickedCards] = useState([])\n  const [totalClicks, setTotalClicks] = useState(0)\n\n  const shuffle = function (array) {\n    let currentIndex = array.length\n    let randomIndex = 0\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex--\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]]\n    }\n    return array\n  }\n\n  const shuffleCards = function() {\n    const shuffled = shuffle([...cardArray])\n    setCardArray(shuffled)\n  }\n  const incrementScore = function() {\n      setCurrScore(currScore + 1)\n  }\n  const incrementClicks = function () {\n    setTotalClicks(totalClicks + 1)\n  }\n  const resetScore = function () {\n    setCurrScore(0)\n  }\n  const resetTotalClicks = function () {\n    setTotalClicks(0)\n  }\n  const updateClicked = function(array) {\n    setClickedCards(array)\n  }\n  const chooseModal = function (param) {\n    setModalSwitch(param)\n  }\n  const updateHighScore = function (value) {\n    setHighScore(value)\n  }\n  const renderSwitch = function (param) {\n    switch(param) {\n      case 'default' :\n        return <Modal chooseModal={chooseModal}/>;\n      case 'fail' :\n        return <FailModal chooseModal={chooseModal}\n                          resetTotalClicks={resetTotalClicks}/>;\n      case 'win' :\n        return <WinModal resetScore={resetScore} \n                        updateClicked={updateClicked} \n                        chooseModal={chooseModal} \n                        resetTotalClicks={resetTotalClicks}\n                        updateHighScore={updateHighScore}\n                        currScore={currScore} \n                        highScore={highScore}/>;\n      default :\n        return null;\n    }\n  }\n  return (\n    <div className=\"App\">\n      { renderSwitch(modalSwitch) }\n      <header className=\"App-header\">\n        <div className=\"title\">\n          <h2>MEMORY</h2>\n          <h1>GAME</h1>\n        </div>\n        <Scoreboard\n          currScore={currScore}\n          highScore={highScore}\n          totalClicks={totalClicks}\n          updateHighScore={updateHighScore}\n          chooseModal={chooseModal}\n          updateClicked={updateClicked}\n        />\n      </header>\n      <main className=\"App-main\">\n        <div className=\"grid\">\n          {cardArray.map( card => \n          <Card \n          key={card.key}\n          dataKey={card.key}\n          title={card.title} \n          img={card.img}\n          clickedCards={clickedCards}\n          updateClicked={updateClicked}\n          increment={incrementScore}\n          incrementClicks={incrementClicks}\n          resetScore={resetScore}\n          resetTotalClicks={resetTotalClicks}\n          shuffle={shuffleCards}\n          chooseModal={chooseModal}\n          />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}